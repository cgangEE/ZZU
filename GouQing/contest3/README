2010 Asia Chengdu Regional Contest

A. Balanced Number
一个数是平衡数的条件是它存在一个平衡数字点x，使得x左侧的权值和右侧的权值相等,在这x的左侧权值为左侧数字权值之和，左侧某个数字的权值为数字的大小*他的位置到x位置之差，同理可得x右侧的权值。现在给定区间[x,y]要求在这个闭区间内有多少个平衡数，（1<=x<=y<=10^18)。
数位DP 首先预处理得到f[k][i][x]表示以k为平衡位置，前i个数字为未知数，且未知数左右权值之差为k，状态转移方程为: f[k][i][x]=f[k][i-1][x+(i-k)*j], j=0..9。对于给定数a，求0到a-1一个有多少平衡数，首先i从高位开始，把i位从0枚举到原来的数字减1，从i-1到最低位都为未知数，再枚举平衡点k，求得最高位到i这些已知数的权值x，ret+=f[k][i-1][x]。还有一个trick的是，全0是有很多个平衡点，在枚举最高位的数字为0时会遇到全0的情况，所以应该在最后ret-=a的位数-1。

B. Battle over Cities

C. Binary Number

D. Detector Placement

E. Double Maze
在两个大小为6*6的迷宫里分别有两个点，每次操作可以同时移动两个点向同一个方向走，但如果有墙则那个点就不会移动，现要求两个点同时到达终点的最少操作序列，如果存在多种操作序列，求字典序最小的序列。
bfs+状态压缩 对每个状态进行状态压缩，bfs由字典序较小的操作对当前状态进行扩展，记录下扩展状态的父状态。最后由终止状态求得操作序列。

F. Error Curves

G. Go Deeper

H. Jenga

I. Rescue

J. Similarity

K. Snooker Referee


